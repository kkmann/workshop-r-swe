---
title: "Introduction"
author: "Daniel, Friedrich, Kevin"
format: 
  revealjs: 
    theme: [default, custom_styles.scss]
description: "Introduction of speakers, get-to-know the audience, organisation, outline of program.</br>Photo CC0 by Mabel Amber on pexels.com."
image: thumbnails/hello.jpg
---

## Disclaimer

</br></br></br>

*Any opinions expressed in this presentation and on the following slides are solely those of the presenter and not necessarily those of their respective employer or company.*

## Daniel

...

## Friedrich

...

## Kevin

::: columns
::: {.column width="30%"}
![](resources/kevin.jpg)
:::

::: {.column width="70%"}
-   Trained in math, 'statistical engineer' by heart
-   Research associate in Heidelberg & Cambridge
    -   optimal clinical trial design
    -   statistical genetics & high dimensional data
-   Methodology statistician with BI since '21
-   R-tist, extensive experience with R packages, version control, and high-performance computing
-   feel free to connect at `r fontawesome::fa("linkedin")` [LinkedIn](https://www.linkedin.com/in/kevin-kunzmann-6486a11bb/) or `r fontawesome::fa("github")` [Github](https://github.com/kkmann)
:::
:::

## What you will learn today

-   Understand the basic structure of an R `r fontawesome::fa("cube")`
-   Create your own R package
-   Learn about & apply professional `r fontawesome::fa("cube")` development workflow
-   Learn & apply fundamentals of quality control for R `r fontawesome::fa("cube")`
-   Get crash-course in version control to stay organized
-   Try out modern collaboration techniques on GitHub.com
-   Learn how to make R `r fontawesome::fa("cube")` available to others

## Program outline

```{r}
#| echo: false
readr::read_csv("resources/program.csv", col_types = "cc") |>
  knitr::kable(col.names = c("", ""))
```

## House-keeping

-   Course website at <https://kkmann.github.io/workshop-r-swe/>
    -   all slides
    -   sources available at <https://github.com/kkmann/workshop-r-swe>
    -   all materials CC-BY 4.0
-   We have a [gittr chat channel](https://gitter.im/workshop-r-swe/community) for this course that you can connect to
    -   use to ask your peers questions
    -   will try to monitor during course
-   Slido.com: #3112331

## What you will need

-   [Github.com](https://github.com/) (free) account `r fontawesome::fa("github")`
-   **Recommended:** [posit.cloud](https://posit.cloud/plans/free) `r fontawesome::fa("cloud")`
    -   Free tier sufficient
    -   Comes with everything installed
    -   Alternative: local R development environment with
        -   git `r fontawesome::fa("git-alt")`
        -   Rtools/R/Rstudio IDE `r fontawesome::fa("r-project")`
-   Curiosity `r emoji::emoji("curious")`
-   Positive attitude `r emoji::emoji("smile")`

##  {background-iframe="https://wall.sli.do/event/aw8yLdhevoVZxt8CJ5ytHG?section=36e6981e-61e0-418c-aaf4-954adbedfd81" background-interactive="true"}

## What do we mean by GSWEP4R\*?

::: aside
\* Good Software Engineering Practice for R
:::

-   Applying concept of GxP to SWE with R
-   Improve **quality** of R code/packages, particularly in regulated enviroments but not limited to!
-   Not a fixed term, we share our perspectives
-   Collection of best practices
-   Do not reinvent the wheel: learn from IT/open source space

## Why care about GSWEP4R?

-   Move to / integration of R in pharma is clear trend
-   R is a powerful yet complex *ecosystem*
    -   Core component: R packages
    -   Mature analysts: users & contributors
    -   Deep understanding crucial, even to just assess quality
-   Analyses increasingly require complex scripts/programs </br> $\leadsto$ line between programming and data analysis blurs
-   Value: de-risking use of R and efficiency gains

## Start small - script to package

1.  Encapsulate behavior (functions)
2.  Avoid global state/variables
3.  Adopt consistent coding style
4.  Document well
5.  Version your code
6.  Share as 'bundle'

$\leadsto$ R package

## The R package ecosystem - huge success

```{r cran-pkg-network}
if (!file.exists("resources/pkg_graph.png")) { # primitive caching
  library(tidyverse)
  local({
    r <- getOption("repos")
    r["CRAN"] <- "https://cloud.r-project.org" 
    options(repos = r)
  })
  # get pkg cumulative downloads from last month
  db <- tools::CRAN_package_db()
  tbl_dl_ <- db %>%
      group_by(chunk = row_number() %/% 100) %>% # chunk to comply with API limit
      nest() %>%
      mutate(
          res = purrr::map2(
              data, chunk,
              function(data, id) {
                  cranlogs::cran_downloads(data$Package, when = "last-month") %>%
                      group_by(package) %>%
                      summarize(count = sum(count))
              }
          )
      ) %>%
      ungroup() %>%
      select(res) %>%
      unnest(res) %>%
      distinct()
  tbl_dl <- filter(tbl_dl_, count >= 10000L, !is.na(count))
  tbl_deps <- tools::package_dependencies(
        tbl_dl$package,
        which = c("Imports", "Depends", "LinkingTo")
      ) %>% 
      enframe(name = "from", value = "to") %>% 
      unnest(to)
  grph_deps <- tidygraph::as_tbl_graph(tbl_deps) %>% 
    left_join(
      tbl_dl_,
      by = c(name = "package")
    ) %>% 
    filter(!is.na(count)) # remove base packages
  plt <- ggraph::ggraph(grph_deps, layout = "linear", circular = TRUE) +
      ggraph::geom_edge_link(alpha = .033) + 
      ggraph::geom_node_label(
          aes(label = if_else(count > quantile(count, 0.975, na.rm = TRUE), name, NA_character_)),
          repel = TRUE
      ) +
      ggraph::theme_graph()
  ggsave("resources/pkg_graph.png", plot = plt, width = 8, height = 8/1.61, dpi = 300)
}
knitr::include_graphics("resources/pkg_graph.png")
```

##  {background-iframe="https://pharmaverse.org/" background-interactive="true"}

## GxP + R `r fontawesome::fa("cube")` = `r fontawesome::fa("heart")`

-   Core infrastructure packages only through industry
-   Quality, burden sharing: open-source [pharmaverse](https://pharmaverse.org/) and others
-   Open methodological packages can de-risk innovative methods
-   R packages make (statistical/methodological) code
    -   testable (with documented evidence thereof, CRF 11)
    -   reusable
    -   shareable
    -   easier to document
